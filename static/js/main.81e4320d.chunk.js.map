{"version":3,"sources":["api/config.js","reducers/issues.js","constants/ActionTypes.js","reducers/index.js","components/IssueItem.js","api/issues.js","util/index.js","actions/index.js","containers/IssuesPage.js","components/Loader.js","components/Comment.js","containers/IssueDetailPage.js","containers/App.js","serviceWorker.js","index.js"],"names":["key","initialState","fetching","issues","lastPage","selectedIssue","comments","state","arguments","length","undefined","action","type","Object","objectSpread","payload","combineReducers","issuesData","IssueItem","_ref","data","react_default","a","createElement","row","gutter","style","width","col","lg","xs","icon","theme","color","className","NavLink","to","concat","number","title","user","login","viewBox","version","height","aria-hidden","fillRule","d","constants","BASE_URL","dev","prod","instance","axios","create","baseURL","toLocaleUpperCase","api_issues","page","get","then","response","catch","error","timeSince","date","seconds","Math","floor","Date","interval","IssuesPage","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handlePaginationClick","props","getIssues","renderListItem","item","list","Item","components_IssueItem","inherits","createClass","value","_this$props","Fragment","bordered","dataSource","renderItem","pagination","pageSize","defaultCurrent","total","onChange","React","Component","connect","dispatch","issuesAPIs","headers","link","split","find","includes","receiveIssues","Loader","spin","Comment","card","avatar","src","avatar_url","created_at","whiteSpace","body","IssueDetailPage","getIssueDetails","match","params","issueId","getIssueComments","map","obj","components_Comment","id","tag","populateComments","components_Loader","issueNumber","TabPane","Tabs","BrowserRouter","tabs","defaultActiveKey","tab","disabled","Switch","Route","path","exact","component","Redirect","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","render","react_redux_es","containers_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.81e4320d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst constants = {\r\n  BASE_URL: { dev: 'https://api.github.com', prod: 'https://api.github.com' },\r\n};\r\n\r\nexport const getConstants = key =>\r\n  typeof process.env.NODE_ENV !== 'undefined' ? constants[key.toLocaleUpperCase()].dev : constants[key].prod;\r\n\r\nconst instance = axios.create({\r\n  baseURL: getConstants('BASE_URL'),\r\n});\r\n\r\nexport default instance;\r\n","import * as types from '../constants/ActionTypes';\r\n\r\nconst initialState = {\r\n  fetching: true,\r\n  issues: [],\r\n  lastPage: 0,\r\n  selectedIssue: null,\r\n  comments: [],\r\n}\r\n\r\nconst issues = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.RECEIVE_ISSUES:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        issues: action.issues,\r\n      }\r\n    case types.UPDATE_METADATA:\r\n      return {\r\n        ...state,\r\n        lastPage: action.payload,\r\n      }\r\n    case types.SET_SELECTED_ISSUE_DATA:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        selectedIssue: action.payload,\r\n      }\r\n    case types.SET_SELECTED_ISSUE_COMMENTS:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        comments: action.payload,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default issues;\r\n","export const RECEIVE_ISSUES = 'RECEIVE_ISSUES';\r\nexport const UPDATE_METADATA = 'UPDATE_METADATA';\r\nexport const SET_SELECTED_ISSUE_DATA = 'SET_SELECTED_ISSUE_DATA';\r\nexport const SET_SELECTED_ISSUE_COMMENTS = 'SET_SELECTED_ISSUE_COMMENTS';\r\n","import { combineReducers } from 'redux'\r\nimport issuesData from './issues'\r\n\r\nexport default combineReducers({\r\n  issuesData,\r\n});\r\n","import React from 'react';\r\nimport { Icon } from 'antd';\r\nimport { Row, Col } from 'antd';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst IssueItem = ({ data }) => {\r\n  return (\r\n    <Row gutter={16} style={{width: '100%'}} >\r\n      <Col lg={1} xs={2}>\r\n        <Icon type=\"info-circle\" theme=\"outlined\" style={{color: '#28a745'}}/>\r\n      </Col>\r\n      <Col lg={21} xs={18}>\r\n        <div className=\"issue-title\">\r\n          <NavLink to={`/issue/${data.number}`} title={data.title}>{data.title}</NavLink>\r\n        </div>\r\n        <div>#{data.number} {data.state}ed by {data.user.login}</div>\r\n      </Col>\r\n      <Col lg={2} xs={4}>\r\n        <svg\r\n          className=\"octicon octicon-comment v-align-middle\"\r\n          viewBox=\"0 0 16 16\"\r\n          version=\"1.1\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M14 1H2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h2v3.5L7.5 11H14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm0 9H7l-2 2v-2H2V2h12v8z\"\r\n          />\r\n        </svg> <span className=\"comments-count\">{data.comments}</span>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default IssueItem;\r\n","import axios from './config';\r\n\r\nexport default {\r\n  getIssues: (page) =>\r\n    axios\r\n      .get(`/repos/facebook/react/issues?page=${page}`)\r\n      .then(response => response)\r\n      .catch(error => error),\r\n  getIssueDetails: (number) =>\r\n    axios\r\n      .get(`/repos/facebook/react/issues/${number}`)\r\n      .then(response => response.data)\r\n      .catch(error => error),\r\n  getIssueComments: (number) =>\r\n    axios\r\n      .get(`/repos/facebook/react/issues/${number}/comments`)\r\n      .then(response => response.data)\r\n      .catch(error => error),\r\n};\r\n\r\n","export const getLastPageNumber = (links) => (\r\n  links.split(\", \").find( link => link.includes('rel=\"last\"')).split('page=')[1].split(\">\")[0]\r\n)\r\n\r\nexport function timeSince(date) {\r\n\r\n  var seconds = Math.floor((new Date() - date) / 1000);\r\n\r\n  var interval = Math.floor(seconds / 31536000);\r\n\r\n  if (interval > 1) {\r\n    return interval + \" years\";\r\n  }\r\n  interval = Math.floor(seconds / 2592000);\r\n  if (interval > 1) {\r\n    return interval + \" months\";\r\n  }\r\n  interval = Math.floor(seconds / 86400);\r\n  if (interval > 1) {\r\n    return interval + \" days\";\r\n  }\r\n  interval = Math.floor(seconds / 3600);\r\n  if (interval > 1) {\r\n    return interval + \" hours\";\r\n  }\r\n  interval = Math.floor(seconds / 60);\r\n  if (interval > 1) {\r\n    return interval + \" minutes\";\r\n  }\r\n  return Math.floor(seconds) + \" seconds\";\r\n}","import issuesAPIs from '../api/issues';\r\nimport { getLastPageNumber } from '../util';\r\nimport * as types from '../constants/ActionTypes';\r\n\r\nexport const receiveIssues = issues => ({\r\n  type: types.RECEIVE_ISSUES,\r\n  issues,\r\n});\r\n\r\nexport const updateMetaData = payload => ({\r\n  type: types.UPDATE_METADATA,\r\n  payload,\r\n});\r\n\r\nexport const getIssues = (page = 1) => (dispatch) => {\r\n  issuesAPIs.getIssues(page).then((issues) => {\r\n    dispatch(updateMetaData(getLastPageNumber(issues.headers.link)));\r\n    dispatch(receiveIssues(issues.data));\r\n  });\r\n};\r\n\r\nexport const setSelectedIssueData = payload => ({\r\n  type: types.SET_SELECTED_ISSUE_DATA,\r\n  payload,\r\n});\r\n\r\nexport const getIssueDetails = issueNumber => (dispatch) => {\r\n  issuesAPIs.getIssueDetails(issueNumber).then((data) => {\r\n    dispatch(setSelectedIssueData(data));\r\n  });\r\n};\r\n\r\nexport const setSelectedIssueComments = payload => ({\r\n  type: types.SET_SELECTED_ISSUE_COMMENTS,\r\n  payload,\r\n});\r\n\r\nexport const getIssueComments = issueNumber => (dispatch) => {\r\n  issuesAPIs.getIssueComments(issueNumber).then((data) => {\r\n    dispatch(setSelectedIssueComments(data));\r\n  });\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { List, Pagination } from 'antd';\r\nimport IssueItem from '../components/IssueItem';\r\nimport { getIssues } from '../actions';\r\n\r\nexport class IssuesPage extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getIssues();\r\n  }\r\n\r\n  handlePaginationClick = (page) => {\r\n    this.props.getIssues(page)\r\n  }\r\n\r\n  renderListItem = (item) => {\r\n    return (<List.Item><IssueItem data={item} /></List.Item>);\r\n  }\r\n\r\n  render () {\r\n    const { issues, lastPage } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <List\r\n          bordered\r\n          dataSource={issues}\r\n          renderItem={this.renderListItem}\r\n        />\r\n        <div className=\"pagination-wrapper\">\r\n          <Pagination\r\n            pageSize={30}\r\n            defaultCurrent={1}\r\n            total={lastPage * 30}\r\n            onChange={this.handlePaginationClick}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nIssuesPage.propTypes = {\r\n  issues: PropTypes.array.isRequired\r\n}\r\n\r\nexport const mapStateToProps = (state) => ({\r\n  issues: state.issuesData.issues,\r\n  lastPage: state.issuesData.lastPage,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getIssues }\r\n)(IssuesPage);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n  <div className=\"spinner-container\">\r\n    <Spin />\r\n  </div>\r\n)\r\n\r\nexport default Loader\r\n","import React from 'react';\r\nimport { Avatar, Card } from 'antd';\r\nimport { timeSince } from '../util';\r\n\r\nconst Comment = ({ data }) => (\r\n  <Card\r\n    title={\r\n      <span>\r\n        <Avatar src={data.user.avatar_url}/> {data.user.login} \r\n        <span className=\"comment-meta\"> commented {timeSince(new Date(data.created_at))} ago </span>\r\n      </span>\r\n    }\r\n  >\r\n    <p style={{whiteSpace: 'pre'}}>{data.body}</p>\r\n  </Card>\r\n)\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\nimport { Tag, Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { timeSince } from '../util';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Comment from '../components/Comment';\r\nimport {\r\n  getIssueDetails,\r\n  getIssueComments,\r\n} from '../actions';\r\n\r\nexport class IssueDetailPage extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.getIssueDetails(this.props.match.params.issueId);\r\n    this.props.getIssueComments(this.props.match.params.issueId);\r\n  }\r\n\r\n  populateComments(comments) {\r\n    return comments.map( obj => <Comment key={obj.id} data={obj}/>)\r\n  }\r\n\r\n  render () {\r\n    const { selectedIssue, comments } = this.props;\r\n    if(!selectedIssue) {\r\n      return (\r\n        <Loader />\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"issue-detail-page\">\r\n        <h1>{selectedIssue.title} <span className=\"header-number\">#{selectedIssue.number}</span></h1>\r\n        <div className=\"header-meta\">\r\n          <Tag color=\"#87d068\">\r\n            <Icon type=\"info-circle\" theme=\"outlined\" /> Open\r\n          </Tag>\r\n          <span>\r\n            {selectedIssue.user.login} opened this issue {timeSince(new Date(selectedIssue.created_at))} ago . {comments.length} comments\r\n          </span>\r\n        </div>\r\n        <Comment data={selectedIssue} />\r\n        {this.populateComments(comments)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nIssueDetailPage.propTypes = {\r\n  selectedIssue: PropTypes.object,\r\n  comments: PropTypes.array.isRequired,\r\n};\r\n\r\nexport const mapStateToProps = (state) => ({\r\n  selectedIssue: state.issuesData.selectedIssue,\r\n  comments: state.issuesData.comments,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getIssueDetails, getIssueComments }\r\n)(IssueDetailPage);\r\n","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport IssuesPage from './IssuesPage';\r\nimport Loader from '../components/Loader';\r\nimport IssueDetailPage from './IssueDetailPage';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect, NavLink } from 'react-router-dom';\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nexport const App = ({ fetching }) => (\r\n  <Router>\r\n    <main>\r\n      {fetching && <Loader />}\r\n      <Tabs defaultActiveKey=\"2\">\r\n        <TabPane tab=\"Code\" key=\"1\" disabled />\r\n        <TabPane tab={<NavLink to=\"/issues\">Issues</NavLink>} key=\"2\">\r\n          <Switch>\r\n            <Route\r\n              path=\"/issues\"\r\n              exact\r\n              component={IssuesPage}\r\n            />\r\n            <Route\r\n              path=\"/issue/:issueId\"\r\n              exact\r\n              component={IssueDetailPage}\r\n            />\r\n            <Redirect to=\"/issues\"/>\r\n          </Switch>\r\n        </TabPane>\r\n      </Tabs>\r\n    </main>\r\n  </Router>\r\n);\r\n\r\nApp.propTypes = {\r\n  fetching: PropTypes.bool,\r\n}\r\n\r\nexport const mapStateToProps = (state) => ({\r\n  fetching: state.issuesData.fetching,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(App)\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport thunk from 'redux-thunk';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducer from './reducers';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './styles/styles.css';\r\n\r\nconst middleware = [ thunk ];\r\nif (process.env.NODE_ENV !== 'production') {\r\n  middleware.push(createLogger());\r\n}\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}